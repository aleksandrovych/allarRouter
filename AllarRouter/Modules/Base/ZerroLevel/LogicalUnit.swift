//
//  LogicalUnit.swift
//  AllarRouter
//
//  Created by Allar-Alexey Alexandrovich on 29.11.17.
//  Copyright Â© 2017 Allar-Alexey Alexandrovich. All rights reserved.
//

import Foundation

class LogicalUnit: InputPðŸ„², OutputPðŸ„²  {

    required init() {
        setupI0ðŸ„²Data()
        setupI0ðŸ„²Actions()
    }
    
    var inputData: InputData!
    var inputActions: InputActions!
    
    var outputData: OutputData!
    var outputActions: OutputActions!
    
    func setupI0ðŸ„²Data() {
        let tuple = nakedName()
        
        let result = tuple.0
        let appName = tuple.1
        
        let inputDðŸ„²: String! = "\(appName).\(result)IDðŸ„²"
        let inputDðŸ„²Type = NSClassFromString(inputDðŸ„²) as! InputData.Type
        inputData = inputDðŸ„²Type.init()
        
        let outputDðŸ„² = "\(appName).\(result)ODðŸ„²"
        let outputDðŸ„²Type = NSClassFromString(outputDðŸ„²) as! OutputData.Type
        outputData = outputDðŸ„²Type.init()
    }
    
    func setupI0ðŸ„²Actions() {
        let tuple = nakedName()
        
        let result = tuple.0
        let appName = tuple.1
        
        let inputAðŸ„²: String! = "\(appName).\(result)IAðŸ„²"
        let inputAðŸ„²Type = NSClassFromString(inputAðŸ„²) as! InputActions.Type
        inputActions = inputAðŸ„²Type.init()
        
        let outputAðŸ„² = "\(appName).\(result)OAðŸ„²"
        let outputAðŸ„²Type = NSClassFromString(outputAðŸ„²) as! OutputActions.Type
        outputActions = outputAðŸ„²Type.init()
    }
    
    func nakedName() -> (String, String) {
        let name = String(describing: Mirror(reflecting: self).subjectType)
        
        let splitted = name
            .characters
            .splitBefore(separator: { $0.isUpperCase })
            .map{String($0)}
        
        var result = ""
        splitted.forEach { element in
            guard element.characters.count > 1 else {return}
            result.append(element)
        }
        
        let appName = Bundle.main.object(forInfoDictionaryKey: "CFBundleName") as! String
        
        return (result, appName)
    }
}
