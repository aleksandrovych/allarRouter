//
//  LogicalUnitPğŸ„².swift
//  AllarRouter
//
//  Created by Allar-Alexey Alexandrovich on 16.12.17.
//  Copyright Â© 2017 Allar-Alexey Alexandrovich. All rights reserved.
//

import Foundation

protocol LogicalUnitPğŸ„²: class, InputPğŸ„², OutputPğŸ„², PrivatePğŸ„² {
}

extension LogicalUnitPğŸ„² where Self: AnyObject  {
    func setupLUğŸ„²Data() {
        let tuple = String(describing: Mirror(reflecting: self).subjectType)
        
        let result = tuple.components(separatedBy: ".")[0]
        let appName = Bundle.main.object(forInfoDictionaryKey: "CFBundleName") as! String
        
        let inputDğŸ„²: String! = "\(appName).\(result)IDğŸ„²"
        let inputDğŸ„²Type = NSClassFromString(inputDğŸ„²) as! InputData.Type
        inputData = inputDğŸ„²Type.init()
        
        let outputDğŸ„² = "\(appName).\(result)ODğŸ„²"
        let outputDğŸ„²Type = NSClassFromString(outputDğŸ„²) as! OutputData.Type
        outputData = outputDğŸ„²Type.init()
        
        let privateDğŸ„² = "\(appName).\(result)PDğŸ„²"
        let privateDğŸ„²Type = NSClassFromString(privateDğŸ„²) as! PrivateData.Type
        privateData = privateDğŸ„²Type.init()
    }
    
     func setupLUğŸ„²Actions() {
        let tuple = String(describing: Mirror(reflecting: self).subjectType)
        
        let result = tuple.components(separatedBy: ".")[0]
        let appName = Bundle.main.object(forInfoDictionaryKey: "CFBundleName") as! String
        
        let inputAğŸ„²: String! = "\(appName).\(result)IAğŸ„²"
        let inputAğŸ„²Type = NSClassFromString(inputAğŸ„²) as! InputActions.Type
        inputActions = inputAğŸ„²Type.init()
        
        let outputAğŸ„² = "\(appName).\(result)OAğŸ„²"
        let outputAğŸ„²Type = NSClassFromString(outputAğŸ„²) as! OutputActions.Type
        outputActions = outputAğŸ„²Type.init()
        
        let privateAğŸ„² = "\(appName).\(result)PAğŸ„²"
        let privateAğŸ„²Type = NSClassFromString(privateAğŸ„²) as! PrivateActions.Type
        privateActions = privateAğŸ„²Type.init()
    }
}

