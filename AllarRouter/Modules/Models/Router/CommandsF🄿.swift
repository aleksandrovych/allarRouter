//
//  RoutersF.swift
//  AllarRouter
//
//  Created by Allar-Alexey Alexandrovich on 16.11.17.
//  Copyright Â© 2017 Allar-Alexey Alexandrovich. All rights reserved.
//

import Foundation

enum ActionTğŸ…ƒ {
    case push
    case pop
    case modal
}

enum GatewayTğŸ…ƒ {
    case get
    case create
    case update
    case delete
}

enum LocalTğŸ…ƒ {
    case save
    case select
    case clean
}

enum CodeTğŸ…ƒ {
    case run
}

class CommandsFğŸ„¿: CommandsFğŸ„¿PğŸ„² {
    
    weak var luğŸ„²: LogicalUnitPğŸ„²!
    
    required init(luğŸ„²: LogicalUnitPğŸ„²!) {
        self.luğŸ„² = luğŸ„²
    }
    
    func activist(_ type: ActionTğŸ…ƒ) -> UIRouterCğŸ…ƒ {
        switch type {
        case .push:
            return Pusher(luğŸ„²: self.luğŸ„²)
        case .modal:
            return Modaler(luğŸ„²: self.luğŸ„²)
        case .pop:
            return Poper(luğŸ„²: self.luğŸ„²)
        }
    }
    
    func gateway(_ type: GatewayTğŸ…ƒ) -> NETRouterCğŸ…ƒ {
        switch type {
        case .get:
            return Getter(luğŸ„²: self.luğŸ„²)
        case .create:
            return Creator(luğŸ„²: self.luğŸ„²)
        case .update:
            return Updater(luğŸ„²: self.luğŸ„²)
        case .delete:
            return Deletor(luğŸ„²: self.luğŸ„²)
        }
    }
    
    func local(_ type: LocalTğŸ…ƒ) -> DBRouterCğŸ…ƒ {
        switch type {
        case .save:
            return Saver(luğŸ„²: self.luğŸ„²)
        case .select:
            return Selectioner(luğŸ„²: self.luğŸ„²)
        case .clean:
            return Ğ¡leaner(luğŸ„²: self.luğŸ„²)
        }
    }
    
    func code(_ type: CodeTğŸ…ƒ) -> CodeRouterCğŸ…ƒ {
        switch type {
        case .run:
            return Runner(luğŸ„²: self.luğŸ„²)
        }
    }
}
